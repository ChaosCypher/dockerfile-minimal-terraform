---
name: ci
on:
  pull_request:
    branches:
      - main
    types:
      - edited
      - opened
      - reopened
      - synchronize
      - ready_for_review

env:
  REGISTRY_IMAGE: chaoscypher/minimal-terraform

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true


jobs:
  list-changed-files:
    runs-on: "ubuntu-latest"
    outputs:
      changedFiles: ${{ steps.list-changed-files.outputs.result }}
    steps:
      - uses: actions/checkout@v4.1.1

      - name: List Changed Files
        id: list-changed-files
        uses: actions/github-script@v7.0.1
        with:
          script: |
            const response = await github.request('GET /repos/{owner}/{repo}/pulls/{pull_number}/files', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            const files = response.data.map(file => file.filename);
            console.log(files)
            return { changedFiles: files };

  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.6
        with:
          fetch-depth: 0

      - name: Lint Codebase
        uses: super-linter/super-linter/slim@v5
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-image:
    runs-on: ubuntu-22.04
    needs: [lint, list-changed-files]
    if: >-
      ${{
        (
        contains(needs.list-changed-files.outputs.changedFiles, 'Dockerfile') ||
        contains(needs.list-changed-files.outputs.changedFiles, 'ci.yaml') ||
        contains(needs.list-changed-files.outputs.changedFiles, 'hashicorp.asc')
        )
      }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.6

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: builder
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=ref,event=pr
            type=ref,event=branch
            type=sha,format=long,prefix=

      - name: Build and Push
        uses: docker/build-push-action@v5.3.0
        with:
          builder: ${{ steps.builder.outputs.name }}
          cache-to: type=gha,mode=max
          context: .
          platforms: linux/amd64, linux/arm64
          provenance: mode=max
          push: true
          sbom: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            COMMIT_SHA=${{ github.sha }}
          
  scan-image:
    needs: [build-image]
    runs-on: ubuntu-22.04
    steps:
      - name: Run Trivy Vulnerability Scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ env.REGISTRY_IMAGE }}:${{ github.sha }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  test-container:
    needs: [build-image]
    runs-on: ubuntu-22.04
    steps:
      - name: Check Terraform Version
        run: docker run ${{ env.REGISTRY_IMAGE }}:${{ github.sha }} --version

  dependabot:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    needs: list-changed-files
    if: >-
      ${{
        github.actor == 'dependabot[bot]' && (
        contains(needs.list-changed-files.outputs.changedFiles, 'Dockerfile') ||
        contains(needs.list-changed-files.outputs.changedFiles, 'ci.yaml') ||
        contains(needs.list-changed-files.outputs.changedFiles, 'release.yaml')
        )
      }}
    steps:
      - name: Approve Dependabot Pull Request
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Automerge Dependabot Pull Request
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
