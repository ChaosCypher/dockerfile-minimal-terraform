name: check terraform release
on:
  schedule:
    - cron: 0 0 * * *
  workflow_dispatch:

jobs:
  check-new-release:
    runs-on: ubuntu-22.04

    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: build local container
        uses: docker/build-push-action@v3
        with:
          tags: localbuild/testimage:${{ github.head_ref }}
          push: false
          load: true

      - name: get local terraform version
        id: terraform-local-verison
        run: docker run localbuild/testimage:${{ github.head_ref }} -version -json
        shell: sh

      - name: get latest upstream terraform version
        id: terraform-upstream-version
        uses: actions/github-script@v6.3.2
        with:
          script: |
            const terraform_url = https://checkpoint-api.hashicorp.com/v1/check/terraform
            const result = await github.request(terraform_url)
            
            return result.data

      - name: check newer terraform release
        id: newer-release
        if: fromJson(steps.terraform-upstream-version.outputs.result).current_version > fromJson(steps.terraform-local-version.outputs.result).terraform_version
        run: sed -i "s/"${{ fromJson(steps.terraform-local-version.outputs.result).terraform_version }}"/"${{ fromJson(steps.terraform-upstream-version.outputs.result).current_version }}"/g" Dockerfile

      - name: create pull request
        if: steps.newer-release.outcome == 'success'
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const result = await github.rest.pulls.create({
              title: '[Automation] - Terraform ${{ fromJson(steps.terraform-upstream-version.outputs.result).current_version }} is available.',
              owner,
              repo,
              head: 'gh-automation-tf-release',
              base: 'main',
              body: [
                '- update Terraform in Dockerfile to ${{ fromJson(steps.terraform-upstream-version.outputs.result).current_version }}'
              ].join('\n')
            });
            github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: result.data.number,
              labels: ['patch release']
            });
